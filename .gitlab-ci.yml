stages:
  - prepare
  - build
  - publish

variables:
  GIT_STRATEGY: clone
  GIT_CHECKOUT: "false"
  BUILD_COMMIT: $CI_COMMIT_SHORT_SHA
  BUILD_BRANCH: $CI_COMMIT_REF_NAME
  BUILD_BRANCH_SAFE: $CI_COMMIT_REF_SLUG
  BUILD_TAG: $CI_COMMIT_TAG
  BUILD_NUMBER: $CI_PIPELINE_ID
  GITHUB_OWNER: mysteriumnetwork
  GITHUB_REPO: terms

  GO_PACKAGE: github.com/mysteriumnetwork/terms
  GIT_CLONE_PATH: /home/gitlab-runner/go/src/$GO_PACKAGE
  GOFLAGS: "-count=1" # Supersedes GOCACHE=off, see: https://github.com/golang/go/issues/29378#issuecomment-449383809

before_script:
  # load vars generated by prepare:env
  - source build/env.sh

env:
  stage: prepare
  tags: [go]
  artifacts:
    paths: [build/env.sh]
  before_script: []
  script:
    - git checkout -B master origin/master
    - go run mage.go -v GenerateEnvFile

generate:
  stage: build
  tags: [go]
  script:
    - git remote add upstream https://github.com/mysteriumnetwork/terms.git
    - git checkout -B master origin/master
    - go run mage.go -v GenerateGo
    - go run mage.go -v GenerateJs
    - go run mage.go -v CommitGenerated
    - go run mage.go -v PublishGithub
  artifacts:
    paths:
      - documents
      - terms-js
      - terms-java
  only:
    - master

publish-npm:
  stage: publish
  tags: [docker]
  variables:
    GIT_CLONE_PATH: ""
  image:
    name: node:lts-alpine
  script:
    - npm config set '//registry.npmjs.org/:_authToken' "${NPM_PUBLISH_TOKEN}"
    - npm publish ./terms-js --access public

publish-java:
  stage: publish
  tags: [docker]
  variables:
    GIT_CLONE_PATH: ""
  image:
    name: openjdk:8u282-slim
  script:
    - cd terms-java
    - ./gradlew clean build test
    - ./gradlew -PsigningKey="${GPG_SIGNING_KEY}" -PsigningPassword="" publishMavenJavaPublicationToMavenRepository
